# Maintainer: Marcelo K. <marcelo.elven@...>
# shellcheck disable=all

pkgname=virt-qmod
pkgver=1.0.1
pkgrel=4
arch=('any')
license=('CUSTOM')
depends=('pv' 'bc' 'qemu-base' 'virt-install' 'virt-viewer' 'bridge-utils')
optdepends=('qemu-desktop' 'qemu-full')
pkgdesc="Gerencia Máquinas Virtuais (VMs) utilizando a tecnologia QEMU/KVM (CLI)."
url="https://github.com/elppans/${pkgname}"
source=("git+${url}.git#branch=main")
sha256sums=('SKIP')
md5sums=('SKIP')

# Automatically detect and use the correct install file
# if [ -e "${pkgname}.install" ]; then
	install=${pkgname}.install
# elif [ -e "pkgbuild.install" ]; then
# 	install=pkgbuild.install
# fi

prepare() {
	cd "${srcdir}/${pkgname}"
	# Add any preparation steps here, if needed
	# For example: patch -p1 < "${srcdir}/patch-file.patch"
}

package() {
	cd "${srcdir}/${pkgname}"

	# Determine the correct source directory
	if [ -d "${pkgname}" ]; then
		srcdir="${srcdir}/${pkgname}/${pkgname}"
	else
		srcdir="${srcdir}/${pkgname}"
	fi

	# Install files
	local dirs=("usr" "opt")
	for dir in "${dirs[@]}"; do
		if [ -d "${srcdir}/${dir}" ]; then
			cp -af "${srcdir}/${dir}" "${pkgdir}/"
		fi
	done

	# Install license file if present
	if [ -f "LICENSE" ]; then
		install -Dm644 LICENSE "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
	fi

	# Install documentation if present
	if [ -f "README.md" ]; then
		install -Dm644 README.md "${pkgdir}/usr/share/doc/${pkgname}/README.md"
	fi
}

cat > "${pkgname}.install" <<EOF
post_install() {
	systemctl daemon-reload
# Verifica e adiciona o usuário ao grupo libvirt
libvirt_group=("kvm" "libvirt" "libvirt-qemu")

# Loop para verificar e adicionar o usuário em cada grupo
for GROUP in "${libvirt_group[@]}"; do
    if ! id -nG "$USER" | grep -qw "$libvirt_group"; then
        sudo usermod -aG "$libvirt_group" "$USER"
    fi
done

# Remove qualquer configuração existente do firewall_backend
sed -i '/^firewall_backend/d' /etc/libvirt/network.conf

# Define o firewall_backend como iptables
echo 'firewall_backend = "iptables"' | tee -a /etc/libvirt/network.conf >> /dev/null

# Inicia o serviço libvirtd
systemctl is-enabled libvirtd.service && systemctl restart libvirtd.service || systemctl enable --now libvirtd.service

# Inicia e configura a rede NAT para iniciar de forma automatica
# virsh net-start default
virsh net-autostart default

# Libera o uso de qualquer rede/bridge para o Virt Manager/QEMU (sem restringir a interfaces específicas)
grep 'allow all' /etc/qemu/bridge.conf || echo 'allow all' | tee -a /etc/qemu/bridge.conf >> /dev/null

# Habilitar Encaminhamento de Pacotes IPv4
grep 'net.ipv4.ip_forward=1' /etc/sysctl.d/99-sysctl.conf &>>/dev/null || echo "net.ipv4.ip_forward=1" | tee -a /etc/sysctl.d/99-sysctl.conf >> /dev/null
sysctl -w net.ipv4.ip_forward=1

# Reinicia o serviço libvirtd para aplicar as mudanças
systemctl restart libvirtd.service

	cat <<END

O virt-qmod foi instalado com sucesso...
Faça o comando "virt-qmod" com o parametro "-h" ou "--help" para ver a ajuda;
Para mais informações, acesse o README no github.

END
}

post_upgrade() {
    post_install
}

post_remove() {

	cat <<END

O "virt-qmod" foi removido.

END
}
EOF
